
buildscript {
  repositories {
      jcenter()
    mavenCentral()
    mavenLocal()
  }
  apply from: file('gradle/buildscript.gradle'), to: buildscript
}

allprojects {
  repositories {
    mavenCentral()
    mavenLocal()
    maven {
      url 'https://repository.apache.org/content/repositories/snapshots/'
    }
  }
}

//apply from: file('gradle/convention.gradle')
//apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
//apply from: file('gradle/license.gradle')
//apply from: file('gradle/release.gradle')
apply from: file("gradle/dependency-versions.gradle")


subprojects { project ->
  apply plugin: "java"
  sourceCompatibility = 1.8
  status = rootProject.status
}

project(':fdbench-kafka') {
  dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
  compile 'ch.qos.logback:logback-classic:1.0.13'
  compile 'ch.qos.logback:logback-core:1.0.13'
  compile 'org.apache.kafka:kafka-clients:0.9.0.1'
  compile 'org.apache.kafka:kafka_2.11:0.9.0.1'
  compile 'org.scala-lang:scala-library:2.11.8'
  compile 'com.101tec:zkclient:0.8'
  compile 'org.apache.hadoop:hadoop-yarn-api:2.7.1'
  compile 'org.apache.hadoop:hadoop-yarn-common:2.7.1'
  compile 'org.apache.hadoop:hadoop-yarn-client:2.7.1'
  compile 'org.apache.hadoop:hadoop-common:2.7.1'
  compile 'org.apache.hadoop:hadoop-hdfs:2.7.1'
  compile 'com.googlecode.objectify:objectify:5.1.12'
  compile 'com.typesafe:config:1.3.0'
  compile 'commons-cli:commons-cli:1.3.1'
  compile 'org.apache.commons:commons-lang3:3.4'
  compile 'org.hdrhistogram:HdrHistogram:2.1.8'
  compile 'com.google.code.gson:gson:2.7'
  compile 'com.google.guava:guava:19.0'
  compile 'org.apache.samza:samza-api.10:0.10.0'
  compile 'org.apache.samza:samza-core_2.10:0.10.0'
  testCompile 'junit:junit:4.12'
  }

  task tar(type: Tar) {
  compression = Compression.GZIP
  classifier = 'dist'

  into('bin') {
    from 'src/main/bash'
    fileMode = 0755
  }

  into('lib') {
    from configurations.runtime
  }

  into('lib') {
    from jar
  }
}

task testYarn(type: JavaExec, dependsOn: [tar]) {
  classpath = sourceSets.main.runtimeClasspath + files('/Users/mpathira/PhD/Code/vagrant-hadoop/resources/hadoop')
  main = 'org.pathirage.kafka.bench.BenchRunner'
  environment 'HADOOP_CONF_DIR', '/Users/mpathira/PhD/Code/vagrant-hadoop/resources/hadoop'
  args(['-c', '/Users/mpathira/PhD/Code/kafka-bench/src/main/resources/example.conf'])
}

task killYarnApp(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath + files('/Users/mpathira/PhD/Code/vagrant-hadoop/resources/hadoop')
  main = 'org.apache.hadoop.yarn.client.cli.ApplicationCLI'

  environment 'HADOOP_CONF_DIR', '/Users/mpathira/PhD/Code/vagrant-hadoop/resources/hadoop'

  if (project.hasProperty('app')) {
    println("Killing application: " + project.getProperties().get('app'))
    args(['application', '-kill', project.getProperties().get('app')])
  }
}
}

project(':fdbench-core') {
  dependencies {
    compile "com.google.guava:guava:$guavaVersion"
  }
}

project(':fdbench-yarn') {
  dependencies {
    compile "com.google.guava:guava:$guavaVersion"
  }
}