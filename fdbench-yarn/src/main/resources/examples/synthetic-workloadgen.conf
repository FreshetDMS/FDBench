benchmark {
  name = "workload-gen"
  description = "Workload generator for performance model."
  job {
    factory {
      class = "org.pathirage.fdbench.yarn.YarnJobFactory"
    }
  }
  factory {
    class = "org.pathirage.fdbench.kafka.perfmodeling.SyntheticWorkloadGeneratorFactory"
  }
  deployment {
    state {
      factory = "org.pathirage.fdbench.kafka.perfmodeling.SyntheticWorkloadGeneratorDeploymentStateFactory"
    }
  }
  parallelism = 1
}

//metrics {
//  store {
//    factory {
//      class = ""
//    }
//    access {
//      key = ""
//      secret = ""
//    }
//  }
//}

yarn {
  package {
    path = "${projectDir}/build/distributions/fdbench-yarn-0.1-SNAPSHOT-dist.tgz"
  }
}

kafka {
  zookeeper {
    connect = "localhost:2181"
  }
  brokers = "localhost:9092"
}

workload {
  produce {
    prodtopic11 {
      partitions = 1
      tasks = 1
      rate = 1000
      msg-size {
        mean = 124
        std = 12
        dist = "log-normal"
      }
    }
  }

//  consume {
//    topic1 {
//      partitions = 4
//      tasks = 2
//      msg-processing {
//        type = "constant" // otheroption is exponential service times
//        mean = 23 // time in micro or nano seconds
//        std = 6
//      }
//    }
//  }
//
//  replay {
//    topic1 {
//      partitions = 4
//      tasks = 2
//      msg-processing {
//        type = "constant" // otheroption is exponential service times
//        mean = 23 // time in micro or nano seconds
//        std = 6
//      }
//    }
//  }
}